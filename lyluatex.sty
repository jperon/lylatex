\ProvidesPackage{lyluatex}

% Dependencies
\RequirePackage{luatexbase}
\RequirePackage{luaotfload}
\RequirePackage{kvoptions}
\RequirePackage{graphicx}
\RequirePackage{keycommand}
\RequirePackage{environ}
\RequirePackage{currfile}
\RequirePackage{pdfpages}

\RequirePackage{metalogo}
\newcommand{\lyluatex}{\textit{ly}\LuaTeX}

% Options
\catcode`-=11
\directlua{
  dofile(kpse.find_file("lyluatex.lua"))
  declare_package_options( {
    ['cleantmp'] = 'false',
    ['current-font-as-main'] = 'true',
    ['includepaths'] = './',
    ['line-width'] = 'default',
    ['pass-fonts'] = 'true',
    ['program'] = 'lilypond',
    ['showfailed'] = 'true',
    ['staffsize'] = '0',
    ['tmpdir'] = 'tmp_ly'
  } )
  set_default_options()
  reset_local_options()
}
\directlua{
  check_boolean_options({
    'cleantmp',
    'current-font-as-main',
    'pass-fonts',
    'showfailed'
  })
  if get_option('cleantmp') then
    luatexbase.add_to_callback('stop_run', clean_tmp_dir, 'lyluatex cleantmp')
    luatexbase.add_to_callback('stop_run', conclusion_text, 'lyluatex cleantmp')
  end
}
\catcode`-=12

\newcommand{\pt}{pt}
\newcommand{\mm}{mm}
\newcommand{\cm}{cm}

% Commands to change options during the document
\newcommand{\lilypondCmd}[1]{%
    \directlua{set_option('program', '#1')}
}
% Staff size is calculated in relation to text size if set to 0 (default)
\newcommand{\lilypondStaffsize}[1]{%
    \directlua{set_option('staffsize', '#1')}
}
% Line width is calculated if set to 'default'
\def\defaultwidth{default}
\catcode`-=11
\def\calclinewidth{
  \ifx\lyluatex@line-width\defaultwidth
  \directlua{
    set_option('line-width', '\the\linewidth')
  }
  \else
  \directlua{
    set_option('line-width',\lyluatex@line-width)
  }
  \fi
}
\newcommand{\lilypondLinewidth}[1]{%
  \edef\lyluatex@line-width{#1}
  \directlua{set_option('line-width', #1)}
}
\newcommand{\lilypondPassFonts}[1]{%
  \directlua{set_option('pass-fonts', #1)}
}
\newcommand{\lilypondCurrentFontAsMain}[1]{%
  \directlua{set_option('current-font-as-main', #1)}
}
\catcode`-=12
% Include paths for lilypond documents
\newcommand{\lilypondIncludePaths}[1]{%
    \directlua{set_option('includepaths', '#1')}
}

% Retrieve the three main font families (rm, sf, tt)
% and store them as options. Additionally store the
% *current* font for optional use.
\newcommand{\currentfonts}{%
\begingroup%
    \directlua{set_option('current-font', get_font_family(font.current()))}
    \rmfamily \edef\rmfamilyid{\fontid\font}%
    \sffamily \edef\sffamilyid{\fontid\font}%
    \ttfamily \edef\ttfamilyid{\fontid\font}%
    \directlua{
        set_option('rmfamily', get_font_family(\rmfamilyid))
        set_option('sffamily', get_font_family(\sffamilyid))
        set_option('ttfamily', get_font_family(\ttfamilyid))
    }%
\endgroup%
}

% Main commands
% Inclusion of a .ly file
\newkeycommand*\includely[%
    fullpage=false%
    ,current-font-as-main%
    ,includepaths%
    ,line-width%
    ,pass-fonts%
    ,program%
    ,staffsize%
    ][other-options][1]{%
\calclinewidth
\currentfonts
\directlua{
    set_local_options({
    ['current-font-as-main'] = '\luatexluaescapestring{\commandkey{current-font-as-main}}',
    ['includepaths'] = '\luatexluaescapestring{\commandkey{includepaths}}',
    ['lilypondcmd'] = '\luatexluaescapestring{\commandkey{program}}',
    ['line-width'] = '\luatexluaescapestring{\commandkey{line-width}}',
    ['pass-fonts'] = '\luatexluaescapestring{\commandkey{pass-fonts}}',
    ['staffsize'] = '\luatexluaescapestring{\commandkey{staffsize}}'
    })
    lilypond_file(
        "\luatexluaescapestring{#1}",
        "\luatexluaescapestring{\currfiledir}",
        \commandkey{fullpage}
    )%
}%
\directlua{reset_local_options()}%
}

% Base environment to include a LilyPond fragment integrated into
% the document.
\NewEnviron{compilerly}{%
\calclinewidth
\currentfonts
\directlua{%
    lilypond_fragment(
        "\luatexluaescapestring{\unexpanded\expandafter{\BODY}}"
    )%
}%
}

% Parametrized command and environment for included LilyPond fragment
\newkeycommand{\lily}[%
    ,current-font-as-main%
    ,includepaths%
    ,line-width%
    ,pass-fonts%
    ,program%
    ,staffsize%
    ][other-options][1]{%
\directlua{
    set_local_options({
    ['includepaths'] = '\luatexluaescapestring{\commandkey{includepaths}}',
    ['current-font-as-main'] = '\luatexluaescapestring{\commandkey{current-font-as-main}}',
      ['lilypondcmd'] = '\luatexluaescapestring{\commandkey{program}}',
      ['line-width'] = '\luatexluaescapestring{\commandkey{line-width}}',
      ['pass-fonts'] = '\luatexluaescapestring{\commandkey{pass-fonts}}',
      ['staffsize'] = '\luatexluaescapestring{\commandkey{staffsize}}'
    })
}
\begin{compilerly}%
{#1}
\end{compilerly}%
\directlua{reset_local_options()}%
}

\newkeyenvironment{ly}[%
    current-font-as-main%
    ,includepaths%
    ,line-width%
    ,pass-fonts%
    ,program%
    ,staffsize%
    ][other-options]{%
\directlua{
    set_local_options({
      ['current-font-as-main'] = '\luatexluaescapestring{\commandkey{current-font-as-main}}',
      ['includepaths'] = '\luatexluaescapestring{\commandkey{includepaths}}',
      ['lilypondcmd'] = '\luatexluaescapestring{\commandkey{program}}',
      ['line-width'] = '\luatexluaescapestring{\commandkey{line-width}}',
      ['pass-fonts'] = '\luatexluaescapestring{\commandkey{pass-fonts}}',
      ['staffsize'] = '\luatexluaescapestring{\commandkey{staffsize}}'
    })
}
\compilerly%
}{%
\endcompilerly%
\directlua{reset_local_options()}%
}

% Commands for compatibility with lilypond-book
\let\lilypondfile\includely
\protected\def\lilypond{\def\reserved@a{lilypond}%
  \ifx\reserved@a\@currenvir \expandafter \ly
  \else \expandafter\lily \fi}
\let\endlilypond\endly
